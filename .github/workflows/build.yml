# This is a basic workflow to help you get started with Actions
name: CMake LongQt-model

# Controls when the action will run. Manually triggered
on: workflow_dispatch

env:
  CMAKE_INSTALL_PREFIX: ~/install

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs: 
# This workflow contains a single job called "build"
  build: 
# The type of runner that the job will run on
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }} 
    strategy:
      fail-fast: false
      matrix:
        config:
#          - {
#              name: "Windows Latest MSVC",
#              os: windows-latest,
#              build_type: "Release",
#              cc: "cl",
#              cxx: "cl",
#              environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
#              generators: "Visual Studio 16 2019",
#              qt5_path: "./5.15.2/msvc2019_64/lib/cmake/Qt5",
#              longqt-model: ./share/cmake/LongQt-model
#            }
          - {
              name: "Ubuntu_Latest",
              os: ubuntu-latest,
              build_type: "Release",
              cc: "gcc",
              cxx: "g++",
              generators: "Unix Makefiles",
              qt5_path: "",
              longqt-model: ./share/cmake/LongQt-model
            }
#          - {
#              name: "macOS Latest Clang",
#              os: macos-latest,
#              build_type: "Release",
#              cc: "clang",
#              cxx: "clang++",
#              generators: "Ninja",
#              qt5_path: "/usr/local/opt/qt@5/lib/cmake/Qt5",
#              longqt-model: ./share/cmake/LongQt-model
#            }
    
    steps:
      - uses: actions/checkout@v2

      - name: Download LongQt-model
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.ACC_LONGQT_MODEL}}
          workflow: build.yml
          name: LongQt-model-${{ runner.os }}
          repo: hundlab/LongQt-model

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install cmake
          cmake --version
          py -m pip install aqtinstall
          py -m aqt install 5.15.2 windows desktop win64_msvc2019_64
          cmd "${{ matrix.config.environment_script }}"

          #          choco install -y qt5-default
 
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes build-essential qt5-default
          cmake --version
          gcc --version

      - name: Install dependencies on macos
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install cmake ninja qt@5
          export PATH="/usr/local/opt/qt@5/bin:$PATH"
          ninja --version
          cmake --verion
          clang --version

      - name: Configure
        shell: bash
        run: |
          mkdir -p build
          cmake \
            -S . \
            -B . \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -DCMAKE_INSTALL_PREFIX:PATH=./install \
            -DQt5_DIR:PATH=${{ matrix.config.qt5_path }} \
            -DLongQt-model_DIR:PATH=${{ matrix.config.longqt-model }} \
            -G "${{ matrix.config.generators }}"

      - name: Build
        shell: bash
        run: |
          cmake --build . --config ${{ matrix.config.build_type }}

      - name: Install
        shell: bash
        run: cmake --install . --prefix ./install
 
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: LongQt-${{ runner.os }}
          path: ./install

