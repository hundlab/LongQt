#ifndef GUIUTILS_H
#define GUIUTILS_H

class GuiUtils {
  public:
    QMap<QString, QString> parsDescriptions;
    QMap<QString, QString> dvarsDescriptions;
    QMap<QString, QString> measDescriptions;
    GuiUtils() {
        parsDescriptions.insert("bcl","Basic cycle length");
        parsDescriptions.insert("meastime", "Timepoint to begin measuring variables checked in the “Measure Variables” panel");
        parsDescriptions.insert("paceflag","Check if applying stimulus current to cell membrane");
        parsDescriptions.insert("stimdur","Duration of input stimulus current to cell membrane");
        parsDescriptions.insert("tMax","Duration of simulation");
        parsDescriptions.insert("numstims","Total number of input stimulus pulses to apply to the cell membrane");
        parsDescriptions.insert("stimt","Timepoint to begin inputting stimulus current to cell membrane");
        parsDescriptions.insert("writeflag", "1=write, 0=don't write");
        parsDescriptions.insert("numtrials","Total number of trial simulations to run");
        parsDescriptions.insert("stimval","Current value of input stimulus current to cell membrane");
        parsDescriptions.insert("writetime", "Timepoint to begin writing value of variables checked in the “Track Variables” panel");
        parsDescriptions.insert("readCellState", "Check if reading in initial conditions from a text file");
        parsDescriptions.insert("writeCellState", "Check if writing final conditions of the simulation to a text file");
        parsDescriptions.insert("dvarfile","Name of output text file denoting initial conditions/ values checked in “Track Cell Values”");
        parsDescriptions.insert("measfile","Name of output text file denoting initial conditions/ values checked in “Measure Cell Values”");
        parsDescriptions.insert("simvarfile","Name of output text file denoting initial conditions/ values checked in “Choose Variables”");
        parsDescriptions.insert("pvarfile","Name of output text file denoting initial conditions/ values checked in “Perform Sensitivity Analysis”");
        parsDescriptions.insert("cellStateDir","Folder containing output text files with data and initial conditions");
        parsDescriptions.insert("datadir","Folder that will contain output of simulation");


		dvarsDescriptions.insert( "Ca" , "Ca2+ current through the L-type Ca2+ channel, uA/uF" );
		dvarsDescriptions.insert( "CaM" , "" );
		dvarsDescriptions.insert( "Csqnb" , "" );
		dvarsDescriptions.insert( "Gate.a" , "Activation gate of Ito1" );
		dvarsDescriptions.insert( "Gate.aa" , "Ca2+-dependent inactivation gate of Ito2" );
		dvarsDescriptions.insert( "Gate.d" , "Activation gate of ICaL" );
		dvarsDescriptions.insert( "Gate.dt" , "Activation gate of ICaT" );
		dvarsDescriptions.insert( "Gate.f" , "Fast voltage-dependent inactivation gate of ICaL" );
		dvarsDescriptions.insert( "Gate.f_ca" , "Intracellular calcium-dependent inactivation gate of ICaL" );
		dvarsDescriptions.insert( "Gate.f_cabj" , "" );
		dvarsDescriptions.insert( "Gate.f_cabsl" , "" );
		dvarsDescriptions.insert( "Gate.fca" , "Ca2+-dependent inactivation gating variable for ICaL" );
		dvarsDescriptions.insert( "Gate.fca2" , "Slow Ca2+-dependent inactivation gate of ICaL" );
		dvarsDescriptions.insert( "Gate.ft" , "Inactivation gating variable for ICaT" );
		dvarsDescriptions.insert( "Gate.g" , "Calcium-dependent inactivation gate of Irel" );
		dvarsDescriptions.insert( "Gate.h" , "Fast inactivation gate of INa" );
		dvarsDescriptions.insert( "Gate.hl" , "Inactivation gate of INaL" );
		dvarsDescriptions.insert( "Gate.i" , "Fast inactivation gate of Ito1" );
		dvarsDescriptions.insert( "Gate.i2" , "Slow inactivation gate of Ito1" );
		dvarsDescriptions.insert( "Gate.j" , "Slow inactivation gate of INa" );
		dvarsDescriptions.insert( "Gate.m" , "Activation gate of INa" );
		dvarsDescriptions.insert( "Gate.ml" , "Activation gate of INaL" );
		dvarsDescriptions.insert( "Gate.n" , "Activation gating variable for IKs" );
		dvarsDescriptions.insert( "Gate.paf" , "Fast activation gating variable for IKr" );
		dvarsDescriptions.insert( "Gate.pas" , "Slow activation gating variable for IKr" );
		dvarsDescriptions.insert( "Gate.pi" , "Inactivation gating variable for IKr" );
		dvarsDescriptions.insert( "Gate.q" , "Inactivation gating variable for Ito" );
		dvarsDescriptions.insert( "Gate.qa" , "Activation gating variable for Ist" );
		dvarsDescriptions.insert( "Gate.qi" , "Inactivation gating variable for Ist" );
		dvarsDescriptions.insert( "Gate.r" , "Voltage-dependent activation gate of Ito" );
		dvarsDescriptions.insert( "Gate.s" , "Voltage-dependent inactivation gate of Ito" );
		dvarsDescriptions.insert( "Gate.xf" , "" );
		dvarsDescriptions.insert( "Gate.xkr" , "" );
		dvarsDescriptions.insert( "Gate.xks" , "" );
		dvarsDescriptions.insert( "Gate.xkur" , "" );
		dvarsDescriptions.insert( "Gate.xr" , "Activation gate of IKr" );
		dvarsDescriptions.insert( "Gate.xr1" , "Activation gate of IKr" );
		dvarsDescriptions.insert( "Gate.xr2" , "Inactivation gate of IKr" );
		dvarsDescriptions.insert( "Gate.xs" , "Activation gate of IKs" );
		dvarsDescriptions.insert( "Gate.xs2" , "Slow activation gate of IKs" );
		dvarsDescriptions.insert( "Gate.y" , "Activation gating variable for Ih" );
		dvarsDescriptions.insert( "Gate.yf" , "" );
		dvarsDescriptions.insert( "Gate.ykur" , "" );
		dvarsDescriptions.insert( "caI" , "Concentration of free and buffered intracellular Ca2+, mmol/L" );
		dvarsDescriptions.insert( "caJsr" , "Ca2+ concentration in junctional sarcoplasmic reticulum, mmol/L" );
		dvarsDescriptions.insert( "caNsr" , "Ca2+ concentration in network sarcoplasmic reticulum, mmol/L" );
		dvarsDescriptions.insert( "caR" , "" );
		dvarsDescriptions.insert( "caSr" , "Ca2+ concentration in sarcoplasmic reticulum, mmol/L" );
		dvarsDescriptions.insert( "cajI" , "Ca2+ concentration in junction, mmol/L" );
		dvarsDescriptions.insert( "caslI" , "Ca2+ concentration in sarcolemma, mmol/L" );
		dvarsDescriptions.insert( "clI" , "" );
		dvarsDescriptions.insert( "cmdn" , "Calmodulin, Ca2+ buffer in myoplasm" );
		dvarsDescriptions.insert( "cmdnI" , "" );
		dvarsDescriptions.insert( "cmdnR" , "Calmodulin, Ca2+ buffer in subspace" );
		dvarsDescriptions.insert( "csqn" , "Calsequestrin, Ca2+ buffer in junctional sarcoplasmic reticulum" );
		dvarsDescriptions.insert( "dVdt" , "Change in voltage with respect fo time" );
		dvarsDescriptions.insert( "fBlock" , "" );
		dvarsDescriptions.insert( "fBound" , "" );
		dvarsDescriptions.insert( "fI" , "" );
		dvarsDescriptions.insert( "fOx" , "" );
		dvarsDescriptions.insert( "fOxP" , "" );
		dvarsDescriptions.insert( "fPhos" , "" );
		dvarsDescriptions.insert( "iCa" , "Ca2+ current through the L-type Ca2+ channel in sarcolemma and junction, uA/uF" );
		dvarsDescriptions.insert( "iCaL" , "iCa + iCak + iCana" );
		dvarsDescriptions.insert( "iCab" , "Background Ca2+ current, uA/uF" );
		dvarsDescriptions.insert( "iCabjunc" , "Background Ca2+ current in junction, uA/uF" );
		dvarsDescriptions.insert( "iCabsl" , "Background Ca2+ current in sarcolemma, uA/uF" );
		dvarsDescriptions.insert( "iCait" , "" );
		dvarsDescriptions.insert( "iCajunc" , "" );
		dvarsDescriptions.insert( "iCak" , "" );
		dvarsDescriptions.insert( "iCal" , "Ca2+ current through the L-type Ca2+ channel, uA/uF" );
		dvarsDescriptions.insert( "iCana" , "" );
		dvarsDescriptions.insert( "iCanajunc" , "" );
		dvarsDescriptions.insert( "iCanasl" , "" );
		dvarsDescriptions.insert( "iCart " , "Total calcium current due to L-type, T-type, and sodium-calcium exchanger" );
		dvarsDescriptions.insert( "iCasl" , "" );
		dvarsDescriptions.insert( "iCat" , "Ca2+ current through the T-type Ca2+ channel, uA/uF" );
		dvarsDescriptions.insert( "iCatt" , "T-type Ca2+ channel current" );
		dvarsDescriptions.insert( "iClbk" , "" );
		dvarsDescriptions.insert( "iClca" , "" );
		dvarsDescriptions.insert( "iClcajunc" , "" );
		dvarsDescriptions.insert( "iClcasl" , "" );
		dvarsDescriptions.insert( "iClt" , "Total transmembrane Cl- current" );
		dvarsDescriptions.insert( "iDiff" , "Ca2+ transfer from subspace to myoplasm" );
		dvarsDescriptions.insert( "iH" , "Hyperpolarization-activated current" );
		dvarsDescriptions.insert( "iHk" , "Potassium component of hyperpolarization-activated current" );
		dvarsDescriptions.insert( "iHna" , "Sodium component of hyperpolarization-activated current" );
		dvarsDescriptions.insert( "iK1" , "Time-independent K+ current, uA/uF" );
		dvarsDescriptions.insert( "iKach" , "Acetylcholine-sensitive K+ current" );
		dvarsDescriptions.insert( "iKp" , "Plateau K+ current, uA/uF" );
		dvarsDescriptions.insert( "iKpjunc" , "" );
		dvarsDescriptions.insert( "iKpsl" , "" );
		dvarsDescriptions.insert( "iKr" , "Rapid delayed rectifier K+ current, uA/uF" );
		dvarsDescriptions.insert( "iKs" , "Slow delayed rectifier K+ current, uA/uF" );
		dvarsDescriptions.insert( "iKsjunc" , "" );
		dvarsDescriptions.insert( "iKssl" , "" );
		dvarsDescriptions.insert( "iKt" , "Total transmembrane K+ current" );
		dvarsDescriptions.insert( "iKur" , "" );
		dvarsDescriptions.insert( "iLeak" , "Leak current from sarcoplasmic reticulum to cytoplasm" );
		dvarsDescriptions.insert( "iNa" , "Fast Na+ current, uA/uF" );
		dvarsDescriptions.insert( "iNaKjunc" , "" );
		dvarsDescriptions.insert( "iNaKsl" , "" );
		dvarsDescriptions.insert( "iNab" , "Background sodium current" );
		dvarsDescriptions.insert( "iNabjunc" , "" );
		dvarsDescriptions.insert( "iNabsl" , "" );
		dvarsDescriptions.insert( "iNaca" , "Na+-Ca2+ exchanger, uA/uF" );
		dvarsDescriptions.insert( "iNacar" , "" );
		dvarsDescriptions.insert( "iNajunc" , "" );
		dvarsDescriptions.insert( "iNak" , "Na+-K+ pump, uA/uF" );
		dvarsDescriptions.insert( "iNal" , "Slowly inactivating late Na+ current, uA/uF" );
		dvarsDescriptions.insert( "iNasl" , "" );
		dvarsDescriptions.insert( "iNat" , "Total transmembrane Na+ current" );
		dvarsDescriptions.insert( "iNcxjunc" , "" );
		dvarsDescriptions.insert( "iNcxsl" , "" );
		dvarsDescriptions.insert( "iPca" , "Plateau Ca2+ current" );
		dvarsDescriptions.insert( "iRel" , "Ca2+ transfer from junctional SR to subspace" );
		dvarsDescriptions.insert( "iSt" , "Sustained inward current" );
		dvarsDescriptions.insert( "iSus" , "Sustained component of the 4AP-sensitive current" );
		dvarsDescriptions.insert( "iTo" , "4AP-sensitive transient outward K+ current, uA/uF" );
		dvarsDescriptions.insert( "iTo2" , "Ca2+-dependent transient outward Cl- current, uA/uF" );
		dvarsDescriptions.insert( "iTof" , "" );
		dvarsDescriptions.insert( "iTos" , "" );
		dvarsDescriptions.insert( "iTot" , "Total transmembrane current" );
		dvarsDescriptions.insert( "iTr" , "Ca2+ transfer from network to junctional sarcoplasmic reticulum" );
		dvarsDescriptions.insert( "iTrek" , "Transient outward K+ current" );
		dvarsDescriptions.insert( "iUp" , "Pump current taking calcium into sarcoplasmic reticulum" );
		dvarsDescriptions.insert( "ipCa" , "" );
		dvarsDescriptions.insert( "ipCajunc" , "" );
		dvarsDescriptions.insert( "ipCasl" , "" );
		dvarsDescriptions.insert( "ipK" , "Plateau potassium curent" );
		dvarsDescriptions.insert( "kI" , "Intracellular potassium concentration" );
		dvarsDescriptions.insert( "mgI" , "" );
		dvarsDescriptions.insert( "naI" , "Intracellular sodium concentration" );
		dvarsDescriptions.insert( "najI" , "" );
		dvarsDescriptions.insert( "naslI" , "" );
		dvarsDescriptions.insert( "ryRopen" , "" );
		dvarsDescriptions.insert( "t" , "Time (ms)" );
		dvarsDescriptions.insert( "trpn" , "troponin" );
		dvarsDescriptions.insert( "trpnCa" , "" );
		dvarsDescriptions.insert( "trpnMg" , "" );
		dvarsDescriptions.insert( "trpnMgmg" , "" );
		dvarsDescriptions.insert( "vOld" , "Voltage (mV)" );

		measDescriptions.insert("amp","Amplitude");
		measDescriptions.insert("cl","Cycle length");
		measDescriptions.insert("ddr","Diastolic depolarization rate");
		measDescriptions.insert("deriv2ndt","Second derivative with respect to time");
		measDescriptions.insert("derivt","Derivative with respect to time");
		measDescriptions.insert("dur","Duration");
		measDescriptions.insert("durtime1","Time at which duration is measured");
		measDescriptions.insert("maxderiv","Max derivative");
		measDescriptions.insert("min","Minimum");
		measDescriptions.insert("mint","Time at which minimum is measured");
		measDescriptions.insert("peak","Peak");
		measDescriptions.insert("vartakeoff","");
    } 
};
#endif
